1.完整的计算机系统：计算机硬件+操作系统+应用软件（三部分）
             操作系统是一个协调、管理、控制计算机硬件与软件的控制程序。
             操作系统分为两部分：1.接口程序（将操作封装成一个简单接口，给用户或者应用程序使用，对上：应用软件）
                              2.内核（核心功能：操作硬件，对下：硬件）
             操作系统两大功能：1.将复杂的硬件操作封装成简单的功能，提供给用户/应用程序使用
                            2.将多个任务（应用程序）对硬件的竞争变得有序

    
计算机硬件五大组成部分：1.控制器（计算机指挥系统），
                    2.运算器（数学运算+-*/逻辑运算True/False），
                    3.存储器I/O设备（内存+外存，既输入又输出），
                                    内存（主存/速度快/临时短期）：通电有数据，断电丢失
                                    外存（速度慢/永久保存）：机械硬盘/固态硬盘，存取速度远慢于内存            
                    4.输入设备（键鼠，触碰），
                    5.输出设备（显示器，打印机，音响）
CPU：控制器+运算器，也叫中央处理器（CPU工作方式：取指（令）——分析——执行，从内存中取出数据指令分析执行） 
                    详细工作方式：
                        首先CPU从内存取数据，CPU其本身速度快，程序是存到硬盘上的，CPU负责运行执行程序，但不能直接通过硬盘取数据，
                        先从硬盘读到内存，CPU再从内存读数据然后执行指令，内存小，运行慢，CPU本身快，但是非常受限于内存的。
                        内存快满时候需要先释放内存才能再运行软件，如此便影响了CPU运行速度。
                    
                    从（主存储器）内存取指令，从硬盘也可以，但是硬盘其实是基于磁工作的，机械式的，相对电工作的内存，速度慢，
                    所以不能从硬盘取，太慢了！要考虑转速，机械性能。
CPU的两种工作状态:内核态与用户态（了解）
                用户态：CPU执行用户程序（应用程序）所处的状态，CPU的指令集是控制硬件和计算两个功能。
                       应用程序只能用它的计算（逻辑/数学运算）部分功能，CPU处于用户态的话，其内部一定有相应的限制机制，
                       CPU中关于控制的那部分指令集不对应用程序开放。处于用户态不能控制硬件。
                内核态：CPU执行操作系统内核所处的状态，处于内核态可以控制硬件。（应用程序想要控制硬件，发送系统调用，
                       eg：f.write（）操作系统收到请求，CPU要完成一个转换，转成运行操作系统 ，
                       由操作系统将数据存入硬盘，CPU的指令集向操作系统全部开放，此状态称为内核态）
                应用程序的启动：（前提：先启动操作系统）重点！！！
                           首先，向操作系统提交程序启动的路径。
                           然后，操作系统根据文件路径把硬盘的数据读入内存
                           最后，操作系统调用来CPU来执行内存中刚刚读入的程序代码。

	                               
逻辑运算：判断事件的情况并决定执行什么操作
读写即I/O操作，即输入输出，存储设备也就是I/O设备
IT中，性能是经常考虑的环节，所有的性能优化其实是在和I/O打交道，不是CPU。

运行一个程序经历过程：代码由硬盘加载到内存，然后CPU去内存中读取指令，然后执行。


----------------------------------------------------------------------
2.编程语言介绍(发展阶段)分类
python是一门编程语言，编程语言是程序员与计算机沟通的介质。

1.机器语言：直接用二进制指令编程，直接操作硬件；
        优点：执行效率最高
        缺点：开发效率低
2.汇编语言：类似机器语言，将一串二进制数用一个英语单词表示，
          英文标识符取代二进制去编写程序，本质仍然是二进制数直接操作硬件。
        优点：开发效率比机器语言高
		    缺点：没有改变直接控制硬件本质，执行效率较高，但不如机器语言高
3.高级语言：直接用人类的字符去编写程序，不再需要掌握硬件的操作细节。
          必须被翻译成计算机能读懂二进制后，才能被执行，按照翻译方式分为        
             1. 编译型（需要编译器，相当于用谷歌翻译，一次翻译，拿到结果可以重复，执行无需重新编译。）：如C，执行速度快，调试麻烦
                       翻译：程序---GCC---机器语言	执行：机器语言---CPU
                    优点：执行速度比解释型高；依赖语言环境运行，跨平台差，
                    缺点：调试程序困难；跨平台性差          
             2. 解释型（需要解释器，相当于同声传译，边翻译遍执行（解释器软件）相当于翻译官）：如python，执行速度慢，调试方便
                       程序---解释器---机器语言---CPU
                    优点：开发效率高，调试速度快，跨平台性好（一份代码，到处使用）
                    缺点：执行速度效率低，依赖解释器运行

简述python的内管管理：
python使用自动垃圾回收机制来管理内存，每隔一段时间会自动执行垃圾清理，将每个引用计数为0的数据清理出内存。

                    
                 

